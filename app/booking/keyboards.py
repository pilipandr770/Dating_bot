# app/booking/keyboards.py

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime, timedelta

def booking_menu_keyboard(lang="ru"):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å —É—á–µ—Ç–æ–º —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    texts = {
        "ua": {"show": "üîç –ü–æ–∫–∞–∑–∞—Ç–∏ –≤–∞—Ä—ñ–∞–Ω—Ç–∏", "my": "üìã –ú–æ—ó –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è", "cancel": "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏"},
        "ru": {"show": "üîç –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã", "my": "üìã –ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è", "cancel": "‚ùå –û—Ç–º–µ–Ω–∞"},
        "en": {"show": "üîç Show options", "my": "üìã My bookings", "cancel": "‚ùå Cancel"},
        "de": {"show": "üîç Optionen anzeigen", "my": "üìã Meine Buchungen", "cancel": "‚ùå Abbrechen"}
    }
    
    t = texts.get(lang, texts["en"])
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(
        InlineKeyboardButton(t["show"], callback_data="booking:show"),
        InlineKeyboardButton(t["my"], callback_data="booking:my_bookings")
    )
    kb.add(InlineKeyboardButton(t["cancel"], callback_data="booking:cancel"))
    return kb

def date_keyboard(lang="ru"):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã"""
    texts = {
        "ua": {"today": "üîπ –°—å–æ–≥–æ–¥–Ω—ñ", "tomorrow": "üî∏ –ó–∞–≤—Ç—Ä–∞", "other": "üìÜ –Ü–Ω—à–∞ –¥–∞—Ç–∞", "cancel": "üîô –ù–∞–∑–∞–¥"},
        "ru": {"today": "üîπ –°–µ–≥–æ–¥–Ω—è", "tomorrow": "üî∏ –ó–∞–≤—Ç—Ä–∞", "other": "üìÜ –î—Ä—É–≥–∞—è –¥–∞—Ç–∞", "cancel": "üîô –ù–∞–∑–∞–¥"},
        "en": {"today": "üîπ Today", "tomorrow": "üî∏ Tomorrow", "other": "üìÜ Other date", "cancel": "üîô Back"},
        "de": {"today": "üîπ Heute", "tomorrow": "üî∏ Morgen", "other": "üìÜ Anderes Datum", "cancel": "üîô Zur√ºck"}
    }
    
    t = texts.get(lang, texts["en"])
    today = datetime.now().strftime("%Y-%m-%d")
    tomorrow = (datetime.now() + timedelta(days=1)).strftime("%Y-%m-%d")
    day_after = (datetime.now() + timedelta(days=2)).strftime("%Y-%m-%d")
    
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton(t["today"], callback_data=f"booking:date:{today}"),
        InlineKeyboardButton(t["tomorrow"], callback_data=f"booking:date:{tomorrow}")
    )
    kb.add(
        InlineKeyboardButton(f"üìÖ {day_after}", callback_data=f"booking:date:{day_after}"),
        InlineKeyboardButton(t["other"], callback_data="booking:custom_date")
    )
    kb.add(InlineKeyboardButton(t["cancel"], callback_data="booking:cancel"))
    return kb

def place_type_keyboard(lang="ru"):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –º–µ—Å—Ç–∞"""
    texts = {
        "ua": {
            "restaurant": "üçΩ –†–µ—Å—Ç–æ—Ä–∞–Ω", "cafe": "‚òïÔ∏è –ö–∞—Ñ–µ", "bar": "üç∏ –ë–∞—Ä",
            "cinema": "üé¨ –ö—ñ–Ω–æ—Ç–µ–∞—Ç—Ä", "event": "üé≠ –ü–æ–¥—ñ—è", "back": "üîô –ù–∞–∑–∞–¥"
        },
        "ru": {
            "restaurant": "üçΩ –†–µ—Å—Ç–æ—Ä–∞–Ω", "cafe": "‚òïÔ∏è –ö–∞—Ñ–µ", "bar": "üç∏ –ë–∞—Ä",
            "cinema": "üé¨ –ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä", "event": "üé≠ –°–æ–±—ã—Ç–∏–µ", "back": "üîô –ù–∞–∑–∞–¥"
        },
        "en": {
            "restaurant": "üçΩ Restaurant", "cafe": "‚òïÔ∏è Cafe", "bar": "üç∏ Bar",
            "cinema": "üé¨ Cinema", "event": "üé≠ Event", "back": "üîô Back"
        },
        "de": {
            "restaurant": "üçΩ Restaurant", "cafe": "‚òïÔ∏è Caf√©", "bar": "üç∏ Bar",
            "cinema": "üé¨ Kino", "event": "üé≠ Veranstaltung", "back": "üîô Zur√ºck"
        }
    }
    
    t = texts.get(lang, texts["en"])
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton(t["restaurant"], callback_data="booking:type:restaurant"),
        InlineKeyboardButton(t["cafe"], callback_data="booking:type:cafe")
    )
    kb.add(
        InlineKeyboardButton(t["bar"], callback_data="booking:type:bar"),
        InlineKeyboardButton(t["cinema"], callback_data="booking:type:cinema")
    )
    kb.add(InlineKeyboardButton(t["event"], callback_data="booking:type:event"))
    kb.add(InlineKeyboardButton(t["back"], callback_data="booking:back"))
    return kb

def places_keyboard(recommendations: list, lang="ru"):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
    texts = {
        "ua": {"back": "üîô –ù–∞–∑–∞–¥", "more": "üîÑ –ë—ñ–ª—å—à–µ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤"},
        "ru": {"back": "üîô –ù–∞–∑–∞–¥", "more": "üîÑ –ë–æ–ª—å—à–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤"},
        "en": {"back": "üîô Back", "more": "üîÑ More options"},
        "de": {"back": "üîô Zur√ºck", "more": "üîÑ Weitere Optionen"}
    }
    
    t = texts.get(lang, texts["en"])
    kb = InlineKeyboardMarkup(row_width=1)
    
    for i, rec in enumerate(recommendations[:5]):  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        time_str = rec['time']
        if isinstance(time_str, str) and "T" in time_str:
            try:
                dt = datetime.fromisoformat(time_str.replace("Z", "+00:00"))
                time_str = dt.strftime("%d.%m %H:%M")
            except:
                pass
                
        # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –∏ –¥–∞—Ç—É
        label = f"{rec['name']} ‚Äî {time_str}"
        data = f"booking:select:{rec['type']}:{rec['id']}"
        kb.add(InlineKeyboardButton(label, callback_data=data))
        
    if len(recommendations) > 5:
        kb.add(InlineKeyboardButton(t["more"], callback_data="booking:more"))
        
    kb.add(InlineKeyboardButton(t["back"], callback_data="booking:back"))
    return kb

def confirm_keyboard(rec: dict, lang="ru", match_id=None):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    texts = {
        "ua": {"confirm": "‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏", "cancel": "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏"},
        "ru": {"confirm": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "cancel": "‚ùå –û—Ç–º–µ–Ω–∞"},
        "en": {"confirm": "‚úÖ Confirm", "cancel": "‚ùå Cancel"},
        "de": {"confirm": "‚úÖ Best√§tigen", "cancel": "‚ùå Abbrechen"}
    }
    
    t = texts.get(lang, texts["en"])
    kb = InlineKeyboardMarkup(row_width=2)
    
    # –î–æ–±–∞–≤–ª—è–µ–º ID –º–∞—Ç—á–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    callback_data = f"booking:confirm:{rec['type']}:{rec['id']}"
    if match_id:
        callback_data += f":{match_id}"
    
    kb.add(
        InlineKeyboardButton(t["confirm"], callback_data=callback_data),
        InlineKeyboardButton(t["cancel"], callback_data="booking:cancel")
    )
    return kb

def my_bookings_keyboard(reservations, lang="ru"):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    texts = {
        "ua": {"cancel_booking": "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", "back": "üîô –ù–∞–∑–∞–¥"},
        "ru": {"cancel_booking": "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "back": "üîô –ù–∞–∑–∞–¥"},
        "en": {"cancel_booking": "‚ùå Cancel booking", "back": "üîô Back"},
        "de": {"cancel_booking": "‚ùå Buchung stornieren", "back": "üîô Zur√ºck"}
    }
    
    t = texts.get(lang, texts["en"])
    kb = InlineKeyboardMarkup(row_width=2)
    
    for reservation, place in reservations:
        if reservation.status != "cancelled":
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            time_str = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            if reservation.reservation_time:
                try:
                    dt = datetime.fromisoformat(str(reservation.reservation_time).replace("Z", "+00:00"))
                    time_str = dt.strftime("%d.%m.%Y %H:%M")
                except:
                    pass
            
            label = f"{place.name} - {time_str}"
            kb.add(
                InlineKeyboardButton(label, callback_data=f"booking:view:{reservation.id}"),
                InlineKeyboardButton(t["cancel_booking"], callback_data=f"booking:cancel_reservation:{reservation.id}")
            )
    
    kb.add(InlineKeyboardButton(t["back"], callback_data="booking:back"))
    return kb
