# app/booking/admin_handlers_dialog.py

from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import logging
from sqlalchemy import select

from app.database import get_session
from app.booking.models import PlaceType, Place
from app.booking.services_db import VenueService

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è
class AdminVenueDialog(StatesGroup):
    waiting_for_city = State()
    waiting_for_place_type = State()
    waiting_for_name = State()
    waiting_for_url = State()
    # waiting_for_address = State()  # –£–±—Ä–∞–Ω–æ, —Ç.–∫. –ø–æ–ª–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î
    waiting_for_description = State()
    waiting_for_admin_message = State()
    confirm_add = State()
    
# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è
class AdminVenueEditDialog(StatesGroup):
    waiting_for_city = State()
    waiting_for_place_type = State()
    selecting_venue = State()
    editing_field = State()
    waiting_for_new_value = State()
    confirm_edit = State()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è
async def cmd_add_venue(message: types.Message, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    is_admin = await check_admin_rights(message.from_user.id)
    
    if not is_admin:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    await state.finish()
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥
    await message.answer(
        "üèô –®–∞–≥ 1/6: –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∑–∞–≤–µ–¥–µ–Ω–∏–µ:"
    )
    await AdminVenueDialog.waiting_for_city.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
async def process_venue_city(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞"""
    city = message.text.strip()
    
    if not city:
        await message.answer("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ä–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(city=city)
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∑–∞–≤–µ–¥–µ–Ω–∏—è
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
    for place_type in PlaceType:
        markup.insert(KeyboardButton(place_type.value))
    
    await message.answer(
        f"üîñ –®–∞–≥ 2/6: –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city}:",
        reply_markup=markup
    )
    await AdminVenueDialog.waiting_for_place_type.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∑–∞–≤–µ–¥–µ–Ω–∏—è
async def process_venue_type(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∑–∞–≤–µ–¥–µ–Ω–∏—è"""
    place_type = message.text.strip().lower()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –¥–æ–ø—É—Å—Ç–∏–º—ã–º
    valid_types = [t.value for t in PlaceType]
    
    if place_type not in valid_types:
        types_list = ", ".join(valid_types)
        await message.answer(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –∑–∞–≤–µ–¥–µ–Ω–∏—è. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: {types_list}")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(place_type=place_type)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è
    await message.answer(
        "üè¢ –®–∞–≥ 3/7: –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è:",
        reply_markup=types.ReplyKeyboardRemove()
    )
    await AdminVenueDialog.waiting_for_name.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è
async def process_venue_name(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è"""
    name = message.text.strip()
    
    if not name:
        await message.answer("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(name=name)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º URL –∑–∞–≤–µ–¥–µ–Ω–∏—è
    await message.answer(
        "üîó –®–∞–≥ 4/7: –í–≤–µ–¥–∏—Ç–µ URL —Å–∞–π—Ç–∞ –∑–∞–≤–µ–¥–µ–Ω–∏—è (–∏–ª–∏ '-' –µ—Å–ª–∏ –Ω–µ—Ç):"
    )
    await AdminVenueDialog.waiting_for_url.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ URL
async def process_venue_url(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ URL –∑–∞–≤–µ–¥–µ–Ω–∏—è"""
    url = message.text.strip()
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª "-", —Å—á–∏—Ç–∞–µ–º —á—Ç–æ URL –Ω–µ—Ç
    if url == "-":
        url = None
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(url=url)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º —à–∞–≥ —Å –∞–¥—Ä–µ—Å–æ–º, —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ –Ω–µ—Ç –≤ –ë–î)
    await message.answer(
        "ÔøΩ –®–∞–≥ 5/7: –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è (–∏–ª–∏ '-' –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å):"
    )
    await AdminVenueDialog.waiting_for_description.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∞–¥—Ä–µ—Å–∞ - –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º
async def process_venue_address(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∞–¥—Ä–µ—Å–∞ –∑–∞–≤–µ–¥–µ–Ω–∏—è - —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"""
    pass

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è
async def process_venue_description(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è"""
    description = message.text.strip()
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª "-", —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç
    if description == "-":
        description = None
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(description=description)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    await message.answer(
        "‚ÑπÔ∏è –®–∞–≥ 6/7: –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∞–∫—Ü–∏–∏, —Å–∫–∏–¥–∫–∏ –∏ —Ç.–¥.) –∏–ª–∏ '-' –µ—Å–ª–∏ –Ω–µ—Ç:"
    )
    await AdminVenueDialog.waiting_for_admin_message.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def process_venue_admin_message(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    admin_message = message.text.strip()
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª "-", —Å—á–∏—Ç–∞–µ–º —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—Ç
    if admin_message == "-":
        admin_message = None
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(admin_message=admin_message)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    data = await state.get_data()
    
    confirmation_text = (
        f"üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è:\n\n"
        f"üèô –ì–æ—Ä–æ–¥: {data['city']}\n"
        f"üîñ –¢–∏–ø: {data['place_type']}\n"
        f"üè¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {data['name']}\n"
    )
    
    if data.get('url'):
        confirmation_text += f"üîó URL: {data['url']}\n"
    if data.get('description'):
        confirmation_text += f"ÔøΩ –û–ø–∏—Å–∞–Ω–∏–µ: {data['description']}\n"
    if data.get('admin_message'):
        confirmation_text += f"‚ÑπÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {data['admin_message']}\n"
        confirmation_text += f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å–µ—Ö –∑–∞–≤–µ–¥–µ–Ω–∏–π —ç—Ç–æ–≥–æ —Ç–∏–ø–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ\n"
    
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    markup = InlineKeyboardMarkup(row_width=2)
    markup.add(
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="admin:venue:confirm_add"),
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="admin:venue:cancel")
    )
    
    await message.answer(confirmation_text, reply_markup=markup)
    await AdminVenueDialog.confirm_add.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è
async def confirm_add_venue(call: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è"""
    await call.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        async for session in get_session():
            # –û—Ç–ª–∞–¥–∫–∞: –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
            await VenueService.debug_db_schema(session, "dating_bot.places")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–π —Ç–∏–ø, –∞ –Ω–µ Enum
            place_type = data['place_type']
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º URL –≤ link
            url = data.get('url')
            
            # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–∫–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ–º (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö –∑–∞–ø—Ä–æ—Å –≤ –±—É–¥—É—â–µ–º)
            coordinates = None
            
            result = await VenueService.add_venue(
                session=session,
                name=data['name'],
                place_type=place_type,
                city=data['city'],
                url=url,
                description=data.get('description'),
                admin_message=data.get('admin_message'),  # –ë—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ª–æ–≥–∞—Ö
                coordinates=coordinates
            )
            
            if result:
                success_message = (
                    f"‚úÖ –ó–∞–≤–µ–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!\n\n"
                    f"üè¢ {result.name}\n"
                    f"üèô {result.city}\n"
                    f"üîñ –¢–∏–ø: {result.type}\n"
                )
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
                if hasattr(result, 'link') and result.link:
                    success_message += f"üîó –°—Å—ã–ª–∫–∞: {result.link}\n"
                
                success_message += f"üÜî ID: {result.id}"
                
                # –ï—Å–ª–∏ –±—ã–ª–æ –∞–¥–º–∏–Ω—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–æ–±—â–∞–µ–º —á—Ç–æ –æ–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                if data.get('admin_message'):
                    success_message += f"\n\nüìù –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
                
                await call.message.edit_text(success_message)
            else:
                await call.message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è: {e}")
        await call.message.edit_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
    
    await state.finish()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è
async def cmd_edit_venue(message: types.Message, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    is_admin = await check_admin_rights(message.from_user.id)
    
    if not is_admin:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    await state.finish()
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ–¥–µ–Ω–∏–π
    await message.answer("üèô –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–π:")
    await AdminVenueEditDialog.waiting_for_city.set()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–π –≤ –≥–æ—Ä–æ–¥–µ
async def cmd_list_venues(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–≤–µ–¥–µ–Ω–∏–π –≤ –≥–æ—Ä–æ–¥–µ"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    is_admin = await check_admin_rights(message.from_user.id)
    
    if not is_admin:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
    command_args = message.get_args()
    
    if not command_args:
        await message.answer(
            "‚ÑπÔ∏è –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–π.\n"
            "–ü—Ä–∏–º–µ—Ä: /list_venues –§—Ä–∞–Ω–∫—Ñ—É—Ä—Ç"
        )
        return
    
    city = command_args.strip()
    
    try:
        async for session in get_session():
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            await VenueService.debug_db_schema(session, "dating_bot.places")
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–≤–µ–¥–µ–Ω–∏–π –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ
            query = select(Place).where(Place.city.ilike(f"%{city}%"))
            result = await session.execute(query)
            places = result.scalars().all()
            
            if not places:
                await message.answer(f"üîç –ó–∞–≤–µ–¥–µ–Ω–∏—è –≤ –≥–æ—Ä–æ–¥–µ '{city}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–≤–µ–¥–µ–Ω–∏–π
            response = f"üìç –ù–∞–π–¥–µ–Ω–æ –∑–∞–≤–µ–¥–µ–Ω–∏–π –≤ –≥–æ—Ä–æ–¥–µ '{city}': {len(places)}\n\n"
            
            for place in places:
                response += f"üè¢ {place.name}\n"
                response += f"üîñ –¢–∏–ø: {place.type}\n"
                
                if place.link:
                    response += f"üîó –°—Å—ã–ª–∫–∞: {place.link}\n"
                
                if place.latitude and place.longitude:
                    response += f"üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {place.latitude}, {place.longitude}\n"
                
                response += f"üÜî ID: {place.id}\n\n"
                
            await message.answer(response)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–π: {e}")
        await message.answer(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–π: {str(e)}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è
async def cancel_venue_action(call: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–º–µ–Ω—É –¥–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–≤–µ–¥–µ–Ω–∏–µ–º"""
    await call.answer()
    await call.message.edit_text("‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    await state.finish()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async def check_admin_rights(telegram_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    return True

def register_admin_venue_dialog_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è–º–∏"""
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è–º–∏
    dp.register_message_handler(cmd_add_venue, commands=["add_venue"], state="*")
    dp.register_message_handler(cmd_edit_venue, commands=["edit_venue"], state="*")
    dp.register_message_handler(cmd_list_venues, commands=["list_venues"], state="*")
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —à–∞–≥–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è
    dp.register_message_handler(process_venue_city, state=AdminVenueDialog.waiting_for_city)
    dp.register_message_handler(process_venue_type, state=AdminVenueDialog.waiting_for_place_type)
    dp.register_message_handler(process_venue_name, state=AdminVenueDialog.waiting_for_name)
    dp.register_message_handler(process_venue_url, state=AdminVenueDialog.waiting_for_url)
    # dp.register_message_handler(process_venue_address, state=AdminVenueDialog.waiting_for_address)  # –£–±—Ä–∞–Ω–æ
    dp.register_message_handler(process_venue_description, state=AdminVenueDialog.waiting_for_description)
    dp.register_message_handler(process_venue_admin_message, state=AdminVenueDialog.waiting_for_admin_message)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
    dp.register_callback_query_handler(
        confirm_add_venue, 
        lambda c: c.data == "admin:venue:confirm_add", 
        state=AdminVenueDialog.confirm_add
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
    dp.register_callback_query_handler(
        cancel_venue_action, 
        lambda c: c.data == "admin:venue:cancel", 
        state="*"
    )
