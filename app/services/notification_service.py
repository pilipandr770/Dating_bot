# —Ñ–∞–π–ª: app/services/notification_service.py

from app.database import get_session
from app.models.user import User
from sqlalchemy import select
from aiogram import Bot
import os
from dotenv import load_dotenv
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ API —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=BOT_TOKEN)

async def notify_user(telegram_id: str, message: str):
    """
    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ –µ–≥–æ Telegram ID
    """
    try:
        await bot.send_message(chat_id=telegram_id, text=message)
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id}: {str(e)}")
        return False

async def notify_withdrawal_status(withdrawal_id: int, status: str):
    """
    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥ —Ç–æ–∫–µ–Ω–æ–≤
    """
    async for session in get_session():
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞—è–≤–∫–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            from app.models.token_withdrawals import TokenWithdrawal
            
            # –ü–æ–ª—É—á–∞–µ–º –∑–∞—è–≤–∫—É
            withdrawal = await session.scalar(
                select(TokenWithdrawal).where(TokenWithdrawal.id == withdrawal_id)
            )
            if not withdrawal:
                logger.error(f"–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å ID {withdrawal_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False
                
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = await session.scalar(
                select(User).where(User.id == withdrawal.user_id)
            )
            if not user or not user.telegram_id:
                logger.error(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∑–∞—è–≤–∫–∏ {withdrawal_id}")
                return False
            
            # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            lang = user.language or "en"
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –∏ —è–∑—ã–∫–∞
            messages = {
                "approved": {
                    "ua": f"‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è {withdrawal.token_amount} —Ç–æ–∫–µ–Ω—ñ–≤ –±—É–ª–∞ —Å—Ö–≤–∞–ª–µ–Ω–∞! –ö–æ—à—Ç–∏ –±—É–¥—É—Ç—å –ø–µ—Ä–µ—Ä–∞—Ö–æ–≤–∞–Ω—ñ –Ω–∞ –≤–∞—à—É –ø–ª–∞—Ç—ñ–∂–Ω—É –∫–∞—Ä—Ç—É –ø—Ä–æ—Ç—è–≥–æ–º 1-3 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤.",
                    "ru": f"‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ {withdrawal.token_amount} —Ç–æ–∫–µ–Ω–æ–≤ –æ–¥–æ–±—Ä–µ–Ω–∞! –°—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à—É –ø–ª–∞—Ç–µ–∂–Ω—É—é –∫–∞—Ä—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–µ 1-3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.",
                    "en": f"‚úÖ Your request to withdraw {withdrawal.token_amount} tokens has been approved! Funds will be transferred to your payment card within 1-3 business days.",
                    "de": f"‚úÖ Ihr Antrag auf Abhebung von {withdrawal.token_amount} Token wurde genehmigt! Die Gelder werden innerhalb von 1-3 Werktagen auf Ihre Zahlungskarte √ºberwiesen."
                },
                "rejected": {
                    "ua": f"‚ùå –ù–∞ –∂–∞–ª—å, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è {withdrawal.token_amount} —Ç–æ–∫–µ–Ω—ñ–≤ –±—É–ª–∞ –≤—ñ–¥—Ö–∏–ª–µ–Ω–∞. –¢–æ–∫–µ–Ω–∏ –ø–æ–≤–µ—Ä–Ω—É—Ç–æ –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å. –î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –≤ —Å–ª—É–∂–±—É –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.",
                    "ru": f"‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ {withdrawal.token_amount} —Ç–æ–∫–µ–Ω–æ–≤ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –¢–æ–∫–µ–Ω—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.",
                    "en": f"‚ùå Unfortunately, your request to withdraw {withdrawal.token_amount} tokens has been rejected. Tokens have been returned to your balance. For detailed information, please contact support.",
                    "de": f"‚ùå Leider wurde Ihr Antrag auf Abhebung von {withdrawal.token_amount} Token abgelehnt. Die Token wurden Ihrem Guthaben gutgeschrieben. F√ºr detaillierte Informationen wenden Sie sich bitte an den Support."
                }
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            message = messages.get(status, {}).get(lang, messages[status]["en"])
            return await notify_user(user.telegram_id, message)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞—è–≤–∫–∏: {str(e)}")
            return False

async def notify_admins_about_withdrawal(withdrawal_id: int):
    """
    –£–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ –Ω–∞ –≤—ã–≤–æ–¥ —Ç–æ–∫–µ–Ω–æ–≤
    """
    async for session in get_session():
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞—è–≤–∫–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            from app.models.token_withdrawals import TokenWithdrawal
            
            # –°–ø–∏—Å–æ–∫ ID —Ç–µ–ª–µ–≥—Ä–∞–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            admin_ids = os.getenv("ADMIN_IDS", "").split(",")
            if not admin_ids:
                return False
                
            # –ü–æ–ª—É—á–∞–µ–º –∑–∞—è–≤–∫—É
            withdrawal = await session.scalar(
                select(TokenWithdrawal).where(TokenWithdrawal.id == withdrawal_id)
            )
            if not withdrawal:
                return False
                
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = await session.scalar(
                select(User).where(User.id == withdrawal.user_id)
            )
            if not user:
                return False
                
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
            message = f"üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Ç–æ–∫–µ–Ω–æ–≤!\n\nID –∑–∞—è–≤–∫–∏: {withdrawal.id}\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.telegram_id} (ID: {user.id})\n–°—É–º–º–∞: {withdrawal.token_amount} —Ç–æ–∫–µ–Ω–æ–≤\n–î–∞—Ç–∞: {withdrawal.timestamp}\n\n–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin_withdrawal {withdrawal.id} [approve/reject]"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
            for admin_id in admin_ids:
                await notify_user(admin_id, message)
                
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –∑–∞—è–≤–∫–µ: {str(e)}")
            return False
